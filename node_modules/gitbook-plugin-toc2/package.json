{
  "_from": "gitbook-plugin-toc2",
  "_id": "gitbook-plugin-toc2@1.0.5",
  "_inBundle": false,
  "_integrity": "sha1-arZX7qpHVZhm3pLRI10kcQIQOcE=",
  "_location": "/gitbook-plugin-toc2",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "gitbook-plugin-toc2",
    "fetchSpec": "latest",
    "name": "gitbook-plugin-toc2",
    "raw": "gitbook-plugin-toc2",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npm.taobao.org/gitbook-plugin-toc2/download/gitbook-plugin-toc2-1.0.5.tgz",
  "_shasum": "6ab657eeaa47559866de92d1235d2471021039c1",
  "_spec": "gitbook-plugin-toc2",
  "_where": "/Users/g-dragon/MyBook/typescript-study-notes",
  "author": "",
  "bugs": {
    "url": "https://github.com/i5ting/gitbook-plugin-toc2/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "marked-toc": "^0.3.0"
  },
  "deprecated": false,
  "description": "在gitbook里，回车，显示或隐藏toc",
  "devDependencies": {},
  "engines": {
    "gitbook": "*"
  },
  "homepage": "https://github.com/i5ting/gitbook-plugin-toc2#readme",
  "keywords": [
    "gitbook",
    "plugin"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "gitbook-plugin-toc2",
  "optionalDependencies": {},
  "readme": "# gitbook-plugin-toc2\n\n在gitbook里，回车，显示或隐藏toc\n\n![](preview.png)\n\n## 用法\n\n\n在book.js或book.json\n\n```\n{\n    \"plugins\": [\"toc2\"],\n    \"pluginsConfig\": {\n        \"toc2\": {\n            \"addClass\": true,\n            \"className\": \"toc\"\n        }\n    }\n}\n```\n\n然后\n\n```\n$ gitbook install\n```\n\n\n在markdown文件加入 `<!-- toc --> `，当编译的时候回自动在这个位置增加toc\n\n打开页面，默认会显示toc，回车，显示toc，再回车，隐藏toc。当然你也可以直接h隐藏\n\n## 关于gitbook插件\n\n### 文档\n\n[官方的文档](http://developer.gitbook.com/plugins/index.html)极其的烂。。。。，这里还是推荐直接看源码里的文档\n\nhttps://github.com/GitbookIO/gitbook/tree/master/docs\n\n### 插件原理\n\n读取book.js或book.json\n\n```\n    plugins: [\"toc2\"],\n```\n\n### 插件配置\n\n```\n    pluginsConfig: {\n        sitemap: {\n            hostname: 'https://toolchain.gitbook.com'\n        },\n        \"toc2\": {\n            \"addClass\": true,\n            \"className\": \"toc\"\n        }\n    }\n```\n\n\n用的时候\n\n```\nvar pluginConfig = this.config.get('pluginsConfig.toc2', {});\n```\n\n和jq里的$.extend一样\n\n\n### 入口index.js\n\n```\nmodule.exports = {\n    // Extend website resources and html\n    website: {\n        assets: \"./book\",\n        js: [\n            \"test.js\"\n        ],\n        css: [\n            \"test.css\"\n        ],\n        html: {\n            \"html:start\": function() {\n                return \"<!-- Start book \"+this.options.title+\" -->\"\n            },\n            \"html:end\": function() {\n                return \"<!-- End of book \"+this.options.title+\" -->\"\n            },\n\n            \"head:start\": \"<!-- head:start -->\",\n            \"head:end\": \"<!-- head:end -->\",\n\n            \"body:start\": \"<!-- body:start -->\",\n            \"body:end\": \"<!-- body:end -->\"\n        }\n    },\n\n    // Extend ebook resources and html\n    website: {\n        assets: \"./book\",\n        js: [\n            \"test.js\"\n        ],\n        css: [\n            \"test.css\"\n        ],\n        html: {\n            \"html:start\": function() {\n                return \"<!-- Start book \"+this.options.title+\" -->\"\n            },\n            \"html:end\": function() {\n                return \"<!-- End of book \"+this.options.title+\" -->\"\n            },\n\n            \"head:start\": \"<!-- head:start -->\",\n            \"head:end\": \"<!-- head:end -->\",\n\n            \"body:start\": \"<!-- body:start -->\",\n            \"body:end\": \"<!-- body:end -->\"\n        }\n    },\n\n    // Extend templating blocks\n    blocks: {\n        // Author will be able to write \"{% myTag %}World{% endMyTag %}\"\n        myTag: {\n            process: function(blk) {\n                return \"Hello \"+blk.body;\n            }\n        }\n    },\n\n    // Extend templating filters\n    filters: {\n        // Author will be able to write \"{{ 'test'|myFilter }}\"\n        myFilter: function(s) {\n            return \"Hello \"+s;\n        }\n    },\n\n    // Hook process during build\n    hooks: {\n        // For all the hooks, this represent the current generator\n\n        // This is called before the book is generated\n        \"init\": function() {\n            console.log(\"init!\");\n        },\n\n        // This is called after the book generation\n        \"finish\": function() {\n            console.log(\"finish!\");\n        }\n    }\n```\n\n按需就好，一般的css、js和回调hook等比较常用\n\n### 入口指定的js\n\n为了防止大量插件影响速度，所以才有requirejs这种amd的模块化加载机制\n\n```\nrequire([\"gitbook\", \"jQuery\"], function(gitbook, $) {\n\n  // Return true if sidebar is open\n  function isOpen() {\n      return gitbook.state.$book.hasClass('with-summary');\n  }\n  \n  var i = 1;\n  $( window ).keydown(function( event ) {\n    console.log(event.which)\n    // enter = 13\n    // t = 84\n    if ( event.which === 13 || event.which === 84) {\n      if (i % 2 == 1) {\n        $('.markdown-section > ul').first().show().addClass('toc2')\n      } else {\n        $('.markdown-section > ul').first().hide()\n      }\n      \n      i++;\n    }\n    \n    // h = hide\n    if(event.which === 72){\n      $('.markdown-section > ul').first().hide()\n    }\n  });\n  \n  \n  gitbook.events.bind(\"page.change\", function() {\n  \n  });\n  \n});\n\n```\n\n内置jquery，所以整体来说和普通的jquery插件没啥区别，难度比较小\n\n### 结合node模块写扩展\n\n比如本例子中\n\n```\nvar toc = require('marked-toc');\n```\n\n所以它的package.json里就需要安装对应的依赖\n\n```\n  \"dependencies\": {\n    \"marked-toc\": \"^0.3.0\"\n  },\n```\n\n### 事件\n\n- page:before\n- page:change\n- init\n\n事件绑定\n\n```\n  gitbook.events.bind(\"page.change\", function() {\n  \n  });\n```\n\n等等\n\n有时间比较有回调hook\n\n其实如果为了高扩展，可以把hook写到配置项里，和jq插件一样\n\n### engine配置\n\npackage.json必须写\n\n```\n \"engines\": {\n    \"gitbook\": \"*\"\n  },\n```\n\n不然安装的时候找不到。即gitbook install的时候做的手脚\n\n### 慢的问题\n\n目前还无解\n\n只能把SUMMARY里的内容减少到你当前需要的，切勿把所有的都放里，避免死翘翘\n\n### npm scripts\n\n```\n  \"scripts\": {\n    \"start\": \"watch -i 300ms gitbook serve\",\n    \"open\": \"npm run build && open _book/index.html\",\n    \"build\": \"gitbook build . --gitbook=2.0.1\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n```\n\n经常是一遍修改，然后服务器自动reload，这样有的时候会导致gitbook死掉，最好的办法是使用tj的watch监察一下。\n\n## 总结\n\ngitbook的插件设计还是非常不错的。从markdown需要编译处下手，完成插件切入，集成。另外插件的配置方式、hook等都可圈可点。\n\n通过gitbook install来安装gitbook-plugin-xx，也是个不错的实践。\n\n对于设计express或koa插件机制来说，是个比较好的参考。\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/i5ting/gitbook-plugin-toc2.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.5"
}
